@model IEnumerable<User>
@{
    ViewData["Title"] = "Users";
    int editor = User.GetUserId(); // Get the user ID from the claims (If you want to see method go to > Extensions >
}
<div class="d-none d-md-block">
    <table id="UserTable" class="table table-hover table-fixed ">
        <thead>
            <tr class="bg-white">
                <th class="text-center"><span class="sortForUserList text-decoration-none" data-sortby="name">Name
                        <i class="bi bi-arrow-down-up"></i></span></th>
                <th class="text-center">Email</th>
                <th class="text-center">PhoneNumber</th>
                <th class="text-center"><span class="sortForUserList text-decoration-none" data-sortby="Role">Role
                        <i class="bi bi-arrow-down-up"></i></span></th>
                <th class="text-center">Status</th>
                <th class="text-center">Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @foreach (User user in Model)
                {
                    <tr class="text-center">
                        <td>
                            <span class="text-ellipsis">

                                @if (user.imgData != null && user.imgData.Length > 0)
                                {
                                    <img src="@Constants.IMAGE_FORMATE,@Convert.ToBase64String(user.imgData)" width="30" height="30"
                                        class="bg-light rounded-circle" />
                                }
                                else
                                {
                                    <img src="~/images/dish.png" width="30" height="30" class="bg-light rounded-circle" />
                                }

                        @Html.DisplayFor(modelItem => user.FirstName)
                        @Html.DisplayFor(modelItem => user.LastName)
                    </span>
                </td>
                <td class="text-center">
                    <span class="text-ellipsis">
                        @Html.DisplayFor(modelItem => user.Email)</span>
                </td>
                <td class="text-center">
                    <span class="text-ellipsis">
                        @Html.DisplayFor(modelItem => user.PhoneNumber)
                    </span>
                </td>
                <td class="text-center">
                    <span class="text-ellipsis">
                        @Html.DisplayFor(modelItem => user.Role)
                    </span>
                </td>
                <td class="text-center">
                    <div class="badge rounded p-2 text-center my-2 @(user.Status == "Active" ? "bg-success" : "bg-danger" )">
                            <span class="fs-6 fw-lighter">
                            @Html.DisplayFor(modelItem => user.Status)
                            </span>
                        </div>
                    </td>
                    <td class="text-center">
                        <a asp-controller="User" asp-action="EditUser" asp-route-id="@user.Id" data-action="Update-User"
                            class="text-center w-50 text-decoration-none crudAction">
                            <img src="@Url.Content("~/images/edit.png")" class="ms-4" width="15">
                        </a>
                        <a onclick="AssignValue(@user.Id)" class="crudAction" data-action="Delete-User"
                            data-bs-toggle="modal" data-bs-target="#DeleteModal">
                            <img src="@Url.Content("~/images/delete.png")" class="ms-4" width="15">
                        </a>
                    </td>
                </tr>
                        }
            }
            else
            {
                <tr>
                        <td colspan="6" class="text-center text-muted">
                            <div class="no-items-container">
                                <img src="~/images/Animatation/empty-box.gif" alt="No items"
                                    class="animated-empty-box" />
                                <p class="mt-3 text-blue">@MessageHelper.GetInfoMessageForNoRecordsFound(Constants.USER)</p>

                            </div>
                        </td>
                    </tr>
                
            }
        </tbody>
    </table>
</div>

<div class="d-block d-md-none">
    <!-- Accordion for small devices -->
    <div class="accordion" id="userAccordion">
        @if (Model.Any())
        {
            @foreach (User user in Model)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header" id="heading-@user.Id">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapse-@user.Id" aria-expanded="false" aria-controls="collapse-@user.Id">
                            @Html.DisplayFor(modelItem => user.FirstName) @Html.DisplayFor(modelItem => user.LastName)
                        </button>
                    </h2>
                    <div id="collapse-@user.Id" class="accordion-collapse collapse" aria-labelledby="heading-@user.Id"
                        data-bs-parent="#userAccordion">
                        <div class="accordion-body">
                            <p><strong>Email:</strong> @Html.DisplayFor(modelItem => user.Email)</p>
                            <p><strong>Phone Number:</strong> @Html.DisplayFor(modelItem => user.PhoneNumber)</p>
                            <p><strong>Role:</strong> @Html.DisplayFor(modelItem => user.Role)</p>
                            <p><strong>Status:</strong>
                                <span class="badge @(user.Status == " Active" ? "bg-success" : "bg-danger")">
                                    @Html.DisplayFor(modelItem => user.Status)
                                </span>
                            </p>
                            <div class="d-flex justify-content-start">
                                <a asp-controller="User" asp-action="EditUser" asp-route-id="@user.Id"
                                    class="btn btn-sm btn-primary me-2">Edit</a>
                                <button class="btn btn-sm btn-danger deleteUserBtn" data-bs-toggle="modal"
                                    data-user-id="@user.Id" data-bs-target="#DeleteModal">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center text-muted">@MessageHelper.GetInfoMessageForNoRecordsFound(Constants.USER)</div>
        }
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="DeleteModal" tabindex="-1" aria-labelledby="DeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body d-flex flex-column justify-content-center align-items-center">

                <img src="~/images/pngegg.png" class="mb-3" width="50" alt="Warning">
                <span>@MessageHelper.GetWarningMessageForDeleteConfirmation(Constants.USER)</span>
                <form id="deleteUserForm" method="post" asp-controller="User" asp-action="DeleteUser"
                    class="d-flex col-12 mt-4 container flex-nowrap justify-content-center">
                    <input type="hidden" id="editorIdAtUserDelete" name="editor" value=@editor />
                    <input type="hidden" id="userIdForDelete" name="userId">
                    <button type="submit" class="updateBtn btn w-25 ">Yes</button>
                    <button type="button" class="btn ms-3 cancelbtn w-25" data-bs-dismiss="modal">No</button>
                </form>
            </div>
        </div>
    </div>
</div>